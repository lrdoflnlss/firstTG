package gaspump

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
)

type Client struct{}

type AutoGenerated []struct {
	Text string `json:"text"`
}

func New() *Client {
	return &Client{}
}

func (c *Client) GetComments(ca string) ([]string, error) {
	url := fmt.Sprintf("https://api.gas111.com/api/v1/community-notes/list?token_address=%s", ca)
	method := "GET"

	client := &http.Client{}
	req, err := http.NewRequest(method, url, nil)
	if err != nil {
		return nil, err
	}
	req.Header.Add("accept", "*/*")
	req.Header.Add("accept-language", "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7")
	req.Header.Add("origin", "https://gaspump.tg")
	req.Header.Add("priority", "u=1, i")
	req.Header.Add("referer", "https://gaspump.tg/")
	req.Header.Add("sec-ch-ua", "\"Google Chrome\";v=\"129\", \"Not=A?Brand\";v=\"8\", \"Chromium\";v=\"129\"")
	req.Header.Add("sec-ch-ua-mobile", "?0")
	req.Header.Add("sec-ch-ua-platform", "\"Windows\"")
	req.Header.Add("sec-fetch-dest", "empty")
	req.Header.Add("sec-fetch-mode", "cors")
	req.Header.Add("sec-fetch-site", "cross-site")
	req.Header.Add("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36")

	res, err := client.Do(req)
	if err != nil {
		return nil, err
	}

	defer res.Body.Close()

	body, err := ioutil.ReadAll(res.Body)
	if err != nil {
		return nil, err
	}

	var commentData AutoGenerated
	err = json.Unmarshal(body, &commentData)
	if err != nil {
		return nil, err
	}

	var comments []string
	for _, comment := range commentData {
		comments = append(comments, comment.Text)
	}

	return comments, nil
}
